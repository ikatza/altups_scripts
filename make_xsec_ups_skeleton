#! /usr/bin/env bash
#
# create a skeleton UPS setup for genie_xsec
# to be fully functional one shoud run this from within the
#     $PRODUCTS/genie_xsec
# directory
#
#
whatami="make_xsec_ups_skeleton"
product="genie_xsec"
version=""         # like v3_00_06
flavor="NULL"      # x-sec file don't depend on OS flavor
tune=""            # e.g. G18_02a_00_000"
genlist="Default"  # generally should just be "Default"
knots=""           # e.g. 250
emax=""            # e.g. 1000
special=""         # non-standard flag, e.g. "resfix"
fname="gxspl-NUsmall.xml"  # spline file name
dohelp=0

TEMP=`getopt -n ${whatami} -s bash -a \
    --longoptions="help version: tune: genlist: knots: emax: special: fname:" \
    -o h -- "$@" `
eval set -- "${TEMP}"
while [ $# -gt 0 ]; do
  case "$1" in
    "--"               ) shift;      break ;;
    -h | --help        ) dohelp=1          ;;
    --version          ) version=$2; shift ;;
    --tune             ) tune=$2;    shift ;;
    --genlist          ) genlist=$2; shift ;;
    --knots            ) knots=$2;   shift ;;
    --emax             ) emax=$2;    shift ;;
    --special          ) special=$2; shift ;;
    --fname            ) fname=$2;   shift ;;
    *                  ) echo "===> unknown arg '$1'"
  esac
  shift # eat up this arg
done

if [ -z "$version" -o -z "$tune" -o -z "$knots" -o -z "emax" ]; then
  dohelp=42
  cat >&2 <<EOF
    You must supply all of the required arguments:
       --version=${version}
       --tune=${tune}
       --knots=${knots}
       --emax=${emax}
EOF
fi

if [ $dohelp -ne 0 ]; then
  cat >&2 <<EOF

Purpose: create a genie_xsec UPS skeleton

Usage: ${b0} [flags]
  -h | --help       this message and quit
  --version    GENIE version  e.g. v3_00_06
  --tune       GENIE tune     e.g. G18_02a_00_000
  --genlist    GENIE event generator list (generally should be "Default")
  --knots      number of knots used
  --emax       maximum energy in GeV
  --special    [optional] additional qualifier flag (e.g. "resfix")
  --fname      spline file name (e.g. "gxspl-NUsmall.xml")
EOF
  exit 0
fi

# odd case for .version file if NULL, examples have trailing _
flavorvf=${flavor}
if [ "$flavor" == "NULL" ]; then flavorvf="NULL_"; fi

# construct full qual
tunesquash=`echo $tune | tr -d "_"`
qual="$tunesquash:k${knots}:e${emax}"
if [ -n "$special" ] ; then qual="$qual:$special" ; fi
qualdash=`echo $qual | tr ":" "-"`


#echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
echo "prepare to generate ups framework for"
echo "   setup ${product} ${version} -f ${flavor} -q ${qual}"
#echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"


for p in ${version}/${flavor}/${qualdash}/ups \
         ${version}/${flavor}/${qualdash}/data \
         ${version}.version
do
  if [ ! -d $p ]; then mkdir -p $p; fi
done

tableFile=${version}/${flavor}/${qualdash}/ups/${product}.table
versionFile=${version}.version/${flavor}_${qualdash}

#
# create the table file
#
cat > ${tableFile} <<EOF
File=Table
Product=${product}
#*************************************************
# Starting Group definition

Group:

Flavor=${flavor}
Qualifiers="${qual}"

Common:
   Action=setup
      proddir()
      setupenv()
      envSet(GENIEXSECPATH, \${UPS_PROD_DIR}/data)
      # GSPLOAD should find it in GXMLPATH for newer versions of GENIE
      # but specify full path just in case
      envSet(GENIEXSECFILE, \${UPS_PROD_DIR}/data/$fname)
      pathPrepend(GXMLPATH, \${UPS_PROD_DIR}/data)
      envSet(GENIE_XSEC_TUNE,"$tune")
      envSet(GENIE_XSEC_GENLIST,"$genlist")
      envSet(GENIE_XSEC_KNOTS,"$knots")
      envSet(GENIE_XSEC_EMAX,"$emax")


End:
# End Group definition
#*************************************************
EOF

#
# create the version file, if it doesn't exist
#
if [ ! -f ${versionFile} ]; then
cat > ${versionFile} <<EOF
FILE = version
PRODUCT = ${product}
VERSION = ${version}

#*************************************************
EOF
fi

iam=`whoami`
if [ "$iam" == "nusoft" ]; then
  altiam=`klist | grep "Default principal" | cut -d':' -f2 | cut -d'@' -f1 | tr -d ' ' `
  if [ -n "$altiam" ]; then
    iam=${altiam}
    echo "i am \"${iam}\""
  fi
fi
nowGMT=`date -u "+%Y-%m-%d %H:%M:%S"`

nf=`grep QUALIFIERS ${versionFile} | grep -c \"${qual}\"`
if [ $nf -ne 0 ]; then
  echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
  echo "${versionFile} already has an entry for \"${qual}\""
  echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
else
#
# add this version to the version file
#
cat >> ${versionFile} <<EOF
#
FLAVOR = ${flavor}
QUALIFIERS   = "${qual}"
  DECLARER   = ${iam}
  DECLARED   = ${nowGMT} GMT
  MODIFIER   = ${iam}
  MODIFIED   = ${nowGMT} GMT
  PROD_DIR   = ${product}/${version}/${flavor}/${qualdash}
  UPS_DIR    = ups
  TABLE_FILE = ${product}.table
#
#*************************************************
EOF
fi

# end-of-script
