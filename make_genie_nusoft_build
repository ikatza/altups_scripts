#! /usr/bin/env bash
whatami=genie_build.sh

# Assumes UPS setup genie has happened
if [ "x${GENIE_DIR}" == "x" ] ; then
  echo genie has not been setup
  exit
fi

doclean=no
doconfig=no
domake=no
verbose=no
doopt=no
dovle=yes
dolowlevel=no
targets="all"
compiler="gcc"

usage() {
  echo "Usage: ${whatami}              " >&2
  echo "   -c:         clean               [$doclean]   " >&2
  echo "   -C:         configure           [$doconfig]  " >&2
  echo "   -m:         make genie          [$domake]    " >&2
  echo "   -v:         verbose             [$doverbose] " >&2
  echo "   --opt       optimized           [$doopt]     " >&2
  echo "   --vle:      enable-vle          [$dovle]     " >&2
  echo "   --no-vle:   disable-vle                      " >&2
  echo "   --lowlevel: lowlevel-mesg       [$dolowlevel]" >&2
  echo "   --targets=<target>              [$targets]   " >&2
  echo "   --with-compiler: gcc/clang      [$compiler]  " >&2
  return 1
}

GSPLOAD_SAVE=$GSPLOAD
here=`pwd`

TEMP=`getopt -n ${whatami} -s bash -a --longoptions="help clean config make opt vle vhe no-vle no-vhe lowlevel targets: with-compiler:" -o ?hcClmfesv -- "$@"`
if [ $? != 0 ] ; then
  echo "Usage: ${whatami} [-c] [-C] " >&2
fi
eval set -- "${TEMP}"
unset TEMP
for o
do
  case "$o" in
    -h | --help     ) usage ;    exit;;
    -c | --clean    ) doclean=yes    ;;
    -C | --config   ) doconfig=yes   ;;
    -m | --make     ) domake=yes     ;;
    -v              ) verbose=yes    ;;
    --opt           ) doopt=yes      ;;
    --vle           ) dovle=yes      ;;
    --no-vle        ) dovle=no       ;;
    --lowlevel      ) dolowlevel=yes ;;
    --targets       ) targets="$2"; shift ;;
    --with-compiler ) compiler="$2" ; shift ;;
    --              ) shift ;   break;;
  esac
  shift # eat the arg we just processed
done

if [ "$verbose" == "yes" ]; then
  ECHOCMD="echo"
else
  ECHOCMD="# echo"
fi

echo doclean=${doclean} doconfig=${doconfig} domake=${domake}
echo dovle=${dovle} dolowlevel=${dolowlevel} compiler=${compiler}

eval $ECHOCMD cd `dirname $GENIE`
cd `dirname $GENIE`
eval $ECHOCMD export genie_rel=`basename $GENIE`
export genie_rel=`basename $GENIE`

echo "========= genie release: \"${genie_rel}\" "


if [ ! -d ${GENIE} ] ; then
  mkdir ${GENIE}
fi

cd ${GENIE}
if [ "x${GSPLINE_DIR}" != "x" ] ; then
  if [ ! -d ${GSPLINE_DIR} ] ; then
    mkdir ${GSPLINE_DIR}
  fi
fi

if [[ "x${doclean}" == "xyes" ]] ; then
   echo make clean
   make clean > do_make_clean.log 2>&1
fi

if [[ "x${doconfig}" == "xyes" ]] ; then
#

export PYTHIA6_DIR=${PYTHIA_FQ_DIR}
export LHAPDF_LIB=${LHAPDF_FQ_DIR}/lib
export LHAPDF_INC=${LHAPDF_FQ_DIR}/include
export LIBXML2_INC=${LIBXML2_FQ_DIR}/include/libxml2
export LIBXML2_LIB=${LIBXML2_FQ_DIR}/lib
export LOG4CPP_INC=${LOG4CPP_FQ_DIR}/include
export LOG4CPP_LIB=${LOG4CPP_FQ_DIR}/lib


   setprefix=""
#   minosstuff="--enable-minos-evserv"
   minosstuff="--enable-event-server --enable-numi --enable-fnal"
    novastuff=" "
#
   cfg=" $setprefix $minosstuff $novastuff" 
   if [[ "x${compiler}" != "x" ]] ; then
     cfg="$cfg --with-compiler=${compiler}"
   fi
   if [[ "x${dolowlevel}" == "xyes" ]] ; then
     cfg="$cfg --enable-lowlevel-mesg"
   else
     cfg="$cfg --disable-lowlevel-mesg"
   fi
   if [[ "x${dovle}" == "xyes" ]] ; then
     cfg="$cfg --enable-vle-extension"
   fi
#   cfg="$cfg --enable-nuvalidator --enable-neugen"
   cfg="$cfg --disable-gibuu --enable-flux-drivers --enable-geom-drivers"
#   cfg="$cfg --enable-doxygen --enable-test --enable-viewer"
   cfg="$cfg --enable-mueloss"
   cfg="$cfg --enable-atmo --enable-rwght"
   cfg="$cfg --enable-nucleon-decay"
   cfg="$cfg --enable-dylibversion"
   if [[ "${doopt}" == "no" ]] ; then
     cfg="$cfg --enable-debug"
   else
     cfg="$cfg --with-optimiz-level=O3"
   fi
#   cfg="$cfg --with-cern-lib=$CERN_DIR/lib"
   cfg="$cfg --enable-lhapdf" 
   cfg="$cfg --with-lhapdf-inc=${LHAPDF_INC}"
   cfg="$cfg --with-lhapdf-lib=${LHAPDF_LIB}"
   cfg="$cfg --with-pythia6-lib=$PYTHIA6_DIR/lib"
   cfg="$cfg --with-libxml2-inc=${LIBXML2_INC} "
   cfg="$cfg --with-libxml2-lib=${LIBXML2_LIB}"
   cfg="$cfg --with-log4cpp-inc=${LOG4CPP_INC}"
   cfg="$cfg --with-log4cpp-lib=${LOG4CPP_LIB}"

#   cfg="$cfg --enable-profiler --with-profiler-lib=$INSTALLATION/lib"
#   cfg="$cfg --with-log4cpp-inc=$LOG4CPP_DIR/include"
#   cfg="$cfg --with-log4cpp-lib=$LOG4CPP_DIR/lib"
   echo ./configure $cfg
   rm -f do_configure.log
   echo ./configure $cfg > do_configure.log 2>&1
   echo " =============" >> do_configure.log 2>&1 
   ./configure $cfg >> do_configure.log 2>&1
fi

if [[ "x${domake}" == "xyes" ]] ; then
  #srt_setup --unsetup
  unset MAKEFILE MAKEFLAG MAKEFILES MAKEFLAGS
  echo make $targets
  make $targets > do_make.log 2>&1
  makestatus=$?
  echo "\"make $targets\" completed with status $makestatus"
  grep error do_make.log
fi

#return 0
exit

